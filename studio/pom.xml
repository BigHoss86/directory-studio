<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at
  
  http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!--
  @author <a href="mailto:dev@directory.apache.org">Apache Directory Project</a>
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.apache.directory.studio</groupId>
    <artifactId>parent</artifactId>
    <version>1.5.0-SNAPSHOT</version>
  </parent>
  
  <artifactId>studio-build</artifactId>
  <name>Apache Directory Studio Build</name>
  <packaging>jar</packaging>

  <description>Building distributions for the Apache Directory Studio</description>

  <!-- Set some properties -->
  <properties>
    <studio-dir>target/ApacheDirectoryStudio</studio-dir>
  </properties>

  <!-- 
    How building a dist works:
    We presume that all needed dependencies are already somehow available (normally this is the case with mvn install from root)
    
    - Put all profile specific stuff into a specific folder (target/ApacheDirectoryStudio-{profile}
    - Put all general stuff into a folder (target/ApacheDirectoryStudio)
    
    - Let the assembly plugin do its work. For each profile exists an assembly-descriptor (src/main/assembly).
    - In general you can say a distribution is a merge of the profile specific and the general folder.
    - The distribution stored in the ../target/distribution folder and name by its profile.
    - In the end the distribution is unzipped in ../target/distribution for immediate use
    
    Note: You can build different distribution in a single run a take the benefits of the general folder. Run e.g.
          mvn clean install -Plinux-x86,linux-x86_64,linux-ppc,macosx,win32 -Dmaven.test.skip=true
          from the projects root to generate all available distribution in one run.
  -->

  <profiles>
    <profile>
      <id>linux-x86</id>
      <activation>
        <os>
          <arch>i386</arch>
          <family>unix</family>
          <name>linux</name>
        </os>
      </activation>
      <!--
        Everything in here is linux-x86 specific. 
        All sources/dependencies within this profile go to
        target/ApacheDirectoryStudio-linux-x86 
      -->
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-studio-launcher-linux-x86</id>
                <!-- Unpack the studio launcher -->
                <phase>generate-resources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <overWrite>true</overWrite>
                  <markersDirectory>${project.build.directory}/maven-dependency-plugin-markers/linux-x86</markersDirectory>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.apache.directory.studio</groupId>
                      <artifactId>launcher-linux-x86</artifactId>
                      <type>tar.gz</type>
                      <outputDirectory>${studio-dir}-linux-x86</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.directory.studio</groupId>
            <artifactId>studio-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-plugins-linux-x86</id>
                <!-- Copy specific plugins for Linux x86 -->
                <phase>generate-resources</phase>
                <goals>
                  <goal>copy-eclipse-artifact</goal>
                </goals>
                <configuration>
                  <destinationDirectory>${studio-dir}-linux-x86/plugins</destinationDirectory>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.eclipse.core.filesystem.linux</groupId>
                      <artifactId>x86</artifactId>
                    </artifactItem>
                    <artifactItem>
                      <groupId>org.eclipse.swt.gtk.linux</groupId>
                      <artifactId>x86</artifactId>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
              <execution>
	            <id>unpack-plugins-linux-x86</id>
	            <phase>generate-resources</phase>
	            <goals>
	              <goal>unpack-with-artifactid-prefix</goal>
	            </goals>
	            <configuration>
	              <outputDirectory>${studio-dir}-linux-x86/plugins</outputDirectory>
	              <artifactItems>
	                <artifactItem>
                      <groupId>org.eclipse.equinox.launcher.gtk.linux</groupId>
                      <artifactId>x86</artifactId>
      				  <type>zip</type>
	                </artifactItem>
	              </artifactItems>
	            </configuration>
	          </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <!-- Create the distribution file -->
            <configuration>
              <finalName>ApacheDirectoryStudio-linux-x86-${pom.version}</finalName>
              <outputDirectory>target/distributions</outputDirectory>
              <descriptors>
                <descriptor>src/main/assembly/bin-linux-x86.xml</descriptor>
              </descriptors>
            </configuration>
            <executions>
              <execution>
                <id>assembly-distribution-linux-x86</id>
                <phase>package</phase>
                <configuration>
                  <finalName>ApacheDirectoryStudio-linux-x86-${pom.version}</finalName>
                  <outputDirectory>../target/distributions</outputDirectory>
                  <descriptors>
                    <descriptor>src/main/assembly/bin-linux-x86.xml</descriptor>
                  </descriptors>
                </configuration>
                <goals>
                  <goal>attached</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <!-- 
                Finally and after all unzip the created distribution in
                ../target/distributions to have a working application there for
                immediate use.
              -->
              <execution>
                <id>unpack-dist-linux-x86 (for immediate use)</id>
                <phase>install</phase>
                <configuration>
                  <tasks>
                    <untar src="../target/distributions/ApacheDirectoryStudio-linux-x86-${pom.version}-dist.tar.gz" dest="../target/distributions" overwrite="true" compression="gzip" />
                    <chmod file="../target/distributions/ApacheDirectoryStudio-linux-x86-${pom.version}/ApacheDirectoryStudio" perm="755" />
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-deploy-plugin</artifactId>
            <executions>
              <execution>
                <id>deploy-dist-linux-x86</id>
                <phase>deploy</phase>
                <configuration>
                  <repositoryId>apache.snapshots.https</repositoryId>
                  <url>${distMgmtSnapshotsUrl}</url>
                  <file>../target/distributions/ApacheDirectoryStudio-linux-x86-${pom.version}-dist.tar.gz</file>
                  <artifactId>ApacheDirectoryStudio</artifactId>
                  <groupId>${pom.groupId}.dist</groupId>
                  <packaging>tar.gz</packaging>
                  <version>${pom.version}-linux-x86</version>
                  <uniqueVersion>false</uniqueVersion>
                  <!-- generatePom>false</generatePom -->
                </configuration>
                <goals>
                  <goal>deploy-file</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>linux-x86_64</id>
      <activation>
        <os>
          <arch>amd64</arch>
          <family>unix</family>
          <name>linux</name>
        </os>
      </activation>
      <!--
        Everything in here is linux-x86_64 specific. 
        All sources/dependencies within this profile go to
        target/ApacheDirectoryStudio-linux-x86_64 
      -->
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-studio-launcher-linux-x86_64</id>
                <!-- Unpack the studio launcher -->
                <phase>generate-resources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <overWrite>true</overWrite>
                  <markersDirectory>${project.build.directory}/maven-dependency-plugin-markers/linux-x86_64</markersDirectory>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.apache.directory.studio</groupId>
                      <artifactId>launcher-linux-x86_64</artifactId>
                      <type>tar.gz</type>
                      <outputDirectory>${studio-dir}-linux-x86_64</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.directory.studio</groupId>
            <artifactId>studio-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-plugins-linux-x86_64</id>
                <!-- Copy specific plugins for Linux x86_64 -->
                <phase>generate-resources</phase>
                <goals>
                  <goal>copy-eclipse-artifact</goal>
                </goals>
                <configuration>
                  <destinationDirectory>${studio-dir}-linux-x86_64/plugins</destinationDirectory>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.eclipse.core.filesystem.linux</groupId>
                      <artifactId>x86_64</artifactId>
                    </artifactItem>
                    <artifactItem>
                      <groupId>org.eclipse.swt.gtk.linux</groupId>
                      <artifactId>x86_64</artifactId>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
              <execution>
	            <id>unpack-plugins-linux-x86_64</id>
	            <phase>generate-resources</phase>
	            <goals>
	              <goal>unpack-with-artifactid-prefix</goal>
	            </goals>
	            <configuration>
	              <outputDirectory>${studio-dir}-linux-x86_64/plugins</outputDirectory>
	              <artifactItems>
	                <artifactItem>
                      <groupId>org.eclipse.equinox.launcher.gtk.linux</groupId>
                      <artifactId>x86_64</artifactId>
      				  <type>zip</type>
	                </artifactItem>
	              </artifactItems>
	            </configuration>
	          </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <!-- Create the distribution file -->
            <configuration>
              <finalName>ApacheDirectoryStudio-linux-x86_64-${pom.version}</finalName>
              <outputDirectory>target/distributions</outputDirectory>
              <descriptors>
                <descriptor>src/main/assembly/bin-linux-x86_64.xml</descriptor>
              </descriptors>
            </configuration>
            <executions>
              <execution>
                <id>assembly-distribution-linux-x86_64</id>
                <phase>package</phase>
                <configuration>
                  <finalName>ApacheDirectoryStudio-linux-x86_64-${pom.version}</finalName>
                  <outputDirectory>../target/distributions</outputDirectory>
                  <descriptors>
                    <descriptor>src/main/assembly/bin-linux-x86_64.xml</descriptor>
                  </descriptors>
                </configuration>
                <goals>
                  <goal>attached</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <!-- 
                Finally and after all unzip the created distribution in
                ../target/distributions to have a working application there for
                immediate use.
              -->
              <execution>
                <id>unpack-dist-linux-x86_64 (for immediate use)</id>
                <phase>install</phase>
                <configuration>
                  <tasks>
                    <untar src="../target/distributions/ApacheDirectoryStudio-linux-x86_64-${pom.version}-dist.tar.gz" dest="../target/distributions" overwrite="true" compression="gzip" />
                    <chmod file="../target/distributions/ApacheDirectoryStudio-linux-x86_64-${pom.version}/ApacheDirectoryStudio" perm="755" />
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-deploy-plugin</artifactId>
            <executions>
              <execution>
                <id>deploy-dist-linux-x86_64</id>
                <phase>deploy</phase>
                <configuration>
                  <repositoryId>apache.snapshots.https</repositoryId>
                  <url>${distMgmtSnapshotsUrl}</url>
                  <file>../target/distributions/ApacheDirectoryStudio-linux-x86_64-${pom.version}-dist.tar.gz</file>
                  <artifactId>ApacheDirectoryStudio</artifactId>
                  <groupId>${pom.groupId}.dist</groupId>
                  <packaging>tar.gz</packaging>
                  <version>${pom.version}-linux-x86_64</version>
                  <uniqueVersion>false</uniqueVersion>
                  <!-- generatePom>false</generatePom -->
                </configuration>
                <goals>
                  <goal>deploy-file</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>linux-ppc</id>
      <activation>
        <os>
          <arch>ppc</arch>
          <family>unix</family>
          <name>linux</name>
        </os>
      </activation>
      <!--
        Everything in here is linux-ppc specific. 
        All sources/dependencies within this profile go to
        target/ApacheDirectoryStudio-linux-ppc 
      -->
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-studio-launcher-linux-ppc</id>
                <!-- Unpack the studio launcher -->
                <phase>generate-resources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <overWrite>true</overWrite>
                  <markersDirectory>${project.build.directory}/maven-dependency-plugin-markers/linux-ppc</markersDirectory>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.apache.directory.studio</groupId>
                      <artifactId>launcher-linux-ppc</artifactId>
                      <type>tar.gz</type>
                      <outputDirectory>${studio-dir}-linux-ppc</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.directory.studio</groupId>
            <artifactId>studio-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-plugins-linux-ppc</id>
                <!-- Copy specific plugins for Linux PPC -->
                <phase>generate-resources</phase>
                <goals>
                  <goal>copy-eclipse-artifact</goal>
                </goals>
                <configuration>
                  <destinationDirectory>${studio-dir}-linux-ppc/plugins</destinationDirectory>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.eclipse.core.filesystem.linux</groupId>
                      <artifactId>ppc</artifactId>
                    </artifactItem>
                    <artifactItem>
                      <groupId>org.eclipse.swt.gtk.linux</groupId>
                      <artifactId>ppc</artifactId>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
              <execution>
	            <id>unpack-plugins-linux-ppc</id>
	            <phase>generate-resources</phase>
	            <goals>
	              <goal>unpack-with-artifactid-prefix</goal>
	            </goals>
	            <configuration>
	              <outputDirectory>${studio-dir}-linux-ppc/plugins</outputDirectory>
	              <artifactItems>
	                <artifactItem>
                      <groupId>org.eclipse.equinox.launcher.gtk.linux</groupId>
                      <artifactId>ppc</artifactId>
      				  <type>zip</type>
	                </artifactItem>
	              </artifactItems>
	            </configuration>
	          </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <!-- Create the distribution file -->
            <configuration>
              <finalName>ApacheDirectoryStudio-linux-ppc-${pom.version}</finalName>
              <outputDirectory>target/distributions</outputDirectory>
              <descriptors>
                <descriptor>src/main/assembly/bin-linux-ppc.xml</descriptor>
              </descriptors>
            </configuration>
            <executions>
              <execution>
                <id>assembly-distribution-linux-ppc</id>
                <phase>package</phase>
                <configuration>
                  <finalName>ApacheDirectoryStudio-linux-ppc-${pom.version}</finalName>
                  <outputDirectory>../target/distributions</outputDirectory>
                  <descriptors>
                    <descriptor>src/main/assembly/bin-linux-ppc.xml</descriptor>
                  </descriptors>
                </configuration>
                <goals>
                  <goal>attached</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <!-- 
                Finally and after all unzip the created distribution in
                ../target/distributions to have a working application there for
                immediate use.
              -->
              <execution>
                <id>unpack-dist-linux-ppc (for immediate use)</id>
                <phase>install</phase>
                <configuration>
                  <tasks>
                    <untar src="../target/distributions/ApacheDirectoryStudio-linux-ppc-${pom.version}-dist.tar.gz" dest="../target/distributions" overwrite="true" compression="gzip" />
                    <chmod file="../target/distributions/ApacheDirectoryStudio-linux-ppc-${pom.version}/ApacheDirectoryStudio" perm="755" />
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-deploy-plugin</artifactId>
            <executions>
              <execution>
                <id>deploy-dist-linux-ppc</id>
                <phase>deploy</phase>
                <configuration>
                  <repositoryId>apache.snapshots.https</repositoryId>
                  <url>${distMgmtSnapshotsUrl}</url>
                  <file>../target/distributions/ApacheDirectoryStudio-linux-ppc-${pom.version}-dist.tar.gz</file>
                  <artifactId>ApacheDirectoryStudio</artifactId>
                  <groupId>${pom.groupId}.dist</groupId>
                  <packaging>tar.gz</packaging>
                  <version>${pom.version}-linux-ppc</version>
                  <uniqueVersion>false</uniqueVersion>
                  <!-- generatePom>false</generatePom -->
                </configuration>
                <goals>
                  <goal>deploy-file</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>win32</id>
      <activation>
        <os>
          <arch>x86</arch>
          <family>windows</family>
        </os>
      </activation>
      <!--
        Everything in here is win32 specific. 
        All sources/dependencies within this profile go to
        target/ApacheDirectoryStudio-win32 
      -->
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-studio-launcher-win32</id>
                <!-- Unpack the studio launcher -->
                <phase>generate-resources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <overWrite>true</overWrite>
                  <markersDirectory>${project.build.directory}/maven-dependency-plugin-markers/win32</markersDirectory>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.apache.directory.studio</groupId>
                      <artifactId>launcher-win32</artifactId>
                      <type>tar.gz</type>
                      <outputDirectory>${studio-dir}-win32</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.directory.studio</groupId>
            <artifactId>studio-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-plugins-win32</id>
                <!-- Copy specific plugins for Windows -->
                <phase>generate-resources</phase>
                <goals>
                  <goal>copy-eclipse-artifact</goal>
                </goals>
                <configuration>
                  <destinationDirectory>${studio-dir}-win32/plugins</destinationDirectory>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.eclipse.core.filesystem.win32</groupId>
                      <artifactId>x86</artifactId>
                    </artifactItem>
                    <artifactItem>
                      <groupId>org.eclipse.swt.win32.win32</groupId>
                      <artifactId>x86</artifactId>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
              <execution>
	            <id>unpack-plugins-win32</id>
	            <phase>generate-resources</phase>
	            <goals>
	              <goal>unpack-with-artifactid-prefix</goal>
	            </goals>
	            <configuration>
	              <outputDirectory>${studio-dir}-win32/plugins</outputDirectory>
	              <artifactItems>
	                <artifactItem>
                      <groupId>org.eclipse.equinox.launcher.win32.win32</groupId>
                      <artifactId>x86</artifactId>
      				  <type>zip</type>
	                </artifactItem>
	              </artifactItems>
	            </configuration>
	          </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <!-- Create the distribution file -->
            <configuration>
              <finalName>ApacheDirectoryStudio-win32-${pom.version}</finalName>
              <outputDirectory>target/distributions</outputDirectory>
              <descriptors>
                <descriptor>src/main/assembly/bin-win32.xml</descriptor>
              </descriptors>
            </configuration>
            <executions>
              <execution>
                <id>assembly-distribution-win32</id>
                <phase>package</phase>
                <configuration>
                  <finalName>ApacheDirectoryStudio-win32-${pom.version}</finalName>
                  <outputDirectory>../target/distributions</outputDirectory>
                  <descriptors>
                    <descriptor>src/main/assembly/bin-win32.xml</descriptor>
                  </descriptors>
                </configuration>
                <goals>
                  <goal>attached</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <!-- 
                Finally and after all unzip the created distribution in
                ../target/distributions to have a working application there for
                immediate use.
              -->
              <execution>
                <id>unpack-dist-win32 (for immediate use)</id>
                <phase>install</phase>
                <configuration>
                  <tasks>
                    <unzip src="../target/distributions/ApacheDirectoryStudio-win32-${pom.version}-dist.zip" dest="../target/distributions" overwrite="true" />
                    <chmod file="../target/distributions/ApacheDirectoryStudio-win32-${pom.version}/Apache Directory Studio.exe" perm="755" />
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-deploy-plugin</artifactId>
            <executions>
              <execution>
                <id>deploy-dist-win32</id>
                <phase>deploy</phase>
                <configuration>
                  <repositoryId>apache.snapshots.https</repositoryId>
                  <url>${distMgmtSnapshotsUrl}</url>
                  <file>../target/distributions/ApacheDirectoryStudio-win32-${pom.version}-dist.zip</file>
                  <artifactId>ApacheDirectoryStudio</artifactId>
                  <groupId>${pom.groupId}.dist</groupId>
                  <packaging>zip</packaging>
                  <version>${pom.version}-win32</version>
                  <uniqueVersion>false</uniqueVersion>
                  <!-- generatePom>false</generatePom -->
                </configuration>
                <goals>
                  <goal>deploy-file</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>macosx</id>
      <activation>
        <os>
          <family>unix</family>
          <name>mac os x</name>
        </os>
      </activation>
      <!--
        Everything in here is macosx specific. 
        All sources/dependencies within this profile go to
        target/ApacheDirectoryStudio-macosx 
      -->
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-studio-launcher-macosx</id>
                <!-- Copy the studio launcher -->
                <phase>generate-resources</phase>
                <goals>
                  <goal>copy</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.apache.directory.studio</groupId>
                      <artifactId>launcher-macosx</artifactId>
                      <type>tar.gz</type>
                      <outputDirectory>${studio-dir}-macosx</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-studio-launcher-macosx</id>
                <!-- Unpack the studio launcher -->
                <phase>generate-resources</phase>
                <configuration>
                  <tasks>
                    <untar dest="${studio-dir}-macosx" compression="gzip">
                        <fileset dir="${studio-dir}-macosx" includes="launcher-macosx*.tar.gz"/>
                    </untar>
                    <delete>
                        <fileset dir="${studio-dir}-macosx/" includes="*.tar.gz"/>
                    </delete>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
              <execution>
                <id>unpack-dist-macosx (for immediate use)</id>
              <!-- 
                Finally and after all unzip the created distribution in
                ../target/distributions to have a working application there for
                immediate use.
              -->
                <phase>install</phase>
                <configuration>
                  <tasks>
                    <untar src="../target/distributions/ApacheDirectoryStudio-macosx-${pom.version}-dist.tar.gz" dest="../target/distributions" overwrite="true" compression="gzip" />
                    <chmod file="../target/distributions/ApacheDirectoryStudio-macosx-${pom.version}/Apache Directory Studio.app/Contents/MacOS/ApacheDirectoryStudio" perm="755" />
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-deploy-plugin</artifactId>
            <executions>
              <execution>
                <id>deploy-dist-macosx</id>
                <phase>deploy</phase>
                <configuration>
                  <repositoryId>apache.snapshots.https</repositoryId>
                  <url>${distMgmtSnapshotsUrl}</url>
                  <file>../target/distributions/ApacheDirectoryStudio-macosx-${pom.version}-dist.tar.gz</file>
                  <artifactId>ApacheDirectoryStudio</artifactId>
                  <groupId>${pom.groupId}.dist</groupId>
                  <packaging>tar.gz</packaging>
                  <version>${pom.version}-macosx</version>
                  <uniqueVersion>false</uniqueVersion>
                  <!-- generatePom>false</generatePom -->
                </configuration>
                <goals>
                  <goal>deploy-file</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.directory.studio</groupId>
            <artifactId>studio-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-plugins-macosx</id>
                <!-- Copy specific plugins for Mac OS X -->
                <phase>generate-resources</phase>
                <goals>
                  <goal>copy-eclipse-artifact</goal>
                </goals>
                <configuration>
                  <destinationDirectory>${studio-dir}-macosx/Apache Directory Studio.app/Contents/Resources/Java/plugins</destinationDirectory>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.eclipse.core.filesystem</groupId>
                      <artifactId>macosx</artifactId>
                    </artifactItem>
                    <artifactItem>
                      <groupId>org.eclipse.jdt.launching</groupId>
                      <artifactId>macosx</artifactId>
                    </artifactItem>
                    <artifactItem>
                      <groupId>org.eclipse.ui</groupId>
                      <artifactId>carbon</artifactId>
                    </artifactItem>
                    <artifactItem>
                      <groupId>org.eclipse.swt.carbon</groupId>
                      <artifactId>macosx</artifactId>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
              <execution>
	            <id>unpack-plugins-macosx</id>
	            <phase>generate-resources</phase>
	            <goals>
	              <goal>unpack-with-artifactid-prefix</goal>
	            </goals>
	            <configuration>
	              <outputDirectory>${studio-dir}-macosx/Apache Directory Studio.app/Contents/Resources/Java/plugins</outputDirectory>
	              <artifactItems>
	                <artifactItem>
                      <groupId>org.eclipse.equinox.launcher.carbon</groupId>
                      <artifactId>macosx</artifactId>
      				  <type>zip</type>
	                </artifactItem>
	              </artifactItems>
	            </configuration>
	          </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <!-- Create the distribution file -->
            <configuration>
              <finalName>ApacheDirectoryStudio-macosx-${pom.version}</finalName>
              <outputDirectory>target/distributions</outputDirectory>
              <descriptors>
                <descriptor>src/main/assembly/bin-macosx.xml</descriptor>
              </descriptors>
            </configuration>
            <executions>
              <execution>
                <id>assembly-distribution-macosx</id>
                <phase>package</phase>
                <configuration>
                  <finalName>ApacheDirectoryStudio-macosx-${pom.version}</finalName>
                  <outputDirectory>../target/distributions</outputDirectory>
                  <descriptors>
                    <descriptor>src/main/assembly/bin-macosx.xml</descriptor>
                  </descriptors>
                </configuration>
                <goals>
                  <goal>attached</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <plugins>
      <!--
        Everything below this point (except test at the end) is used by all profiles
        and goes to the target/ApacheDirectoryStudio folder
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <configuration>
          <skip>false</skip>
        </configuration>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-language-packs</id>
            <!-- Unpack the eclipse language packs -->
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <overWrite>true</overWrite>
              <markersDirectory>${project.build.directory}/maven-dependency-plugin-markers/eclipse-language-packs</markersDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>org.eclipse.languagepack</groupId>
                  <artifactId>BabelLanguagePack-eclipse-de</artifactId>
                  <type>zip</type>
                  <outputDirectory>${project.build.directory}/eclipse-language-packs</outputDirectory>
                  <includes>eclipse/plugins/**</includes>
                  <excludes>
                    eclipse/plugins/org.junit4.nl*,
                    eclipse/plugins/org.eclipse.update.tests.core.nl*,
                    eclipse/plugins/org.eclipse.test.*,
                    eclipse/plugins/org.eclipse.ui.workbench.texteditor.tests.nl*,
                    eclipse/plugins/org.eclipse.ui.presentations.r21.nl*,
                    eclipse/plugins/org.eclipse.ui.intro.universal.nl*,
                    eclipse/plugins/org.eclipse.ui.externaltools.nl*,
                    eclipse/plugins/org.eclipse.ui.examples.*,
                    eclipse/plugins/org.eclipse.ui.editors.tests.nl*,
                    eclipse/plugins/org.eclipse.ui.cheatsheets.nl*,
                    eclipse/plugins/org.eclipse.ui.browser.nl*,
                    eclipse/plugins/org.eclipse.ui.tests*,
                    eclipse/plugins/org.eclipse.ua.tests.nl*,
                    eclipse/plugins/org.eclipse.text.tests.nl*,
                    eclipse/plugins/org.eclipse.team.tests.cvs.core.nl*,
                    eclipse/plugins/org.eclipse.team.examples.filesystem.nl*,
                    eclipse/plugins/org.eclipse.team.cvs.*,
                    eclipse/plugins/org.eclipse.swt.tools.nl*,
                    eclipse/plugins/org.eclipse.swt.tests.nl*,
                    eclipse/plugins/org.eclipse.swt.jmx.nl*,
                    eclipse/plugins/org.eclipse.swt.examples.*,
                    eclipse/plugins/org.eclipse.sdk.tests.nl*,
                    eclipse/plugins/org.eclipse.sdk.examples.nl*,
                    eclipse/plugins/org.eclipse.releng.tools.nl*,
                    eclipse/plugins/org.eclipse.platform.*,
                    eclipse/plugins/org.eclipse.pde.*,
                    eclipse/plugins/org.eclipse.osgi.jmx.nl*,
                    eclipse/plugins/org.eclipse.ltk.ui.refactoring.tests.nl*,
                    eclipse/plugins/org.eclipse.ltk.core.refactoring.tests.nl*,
                    eclipse/plugins/org.eclipse.jsch.*,
                    eclipse/plugins/org.eclipse.jface.text.tests.nl*,
                    eclipse/plugins/org.eclipse.jface.tests.*,
                    eclipse/plugins/org.eclipse.jface.examples.databinding.nl*,
                    eclipse/plugins/org.eclipse.jdt.ui.tests.*,
                    eclipse/plugins/org.eclipse.jdt.ui.examples.projects.nl*,
                    eclipse/plugins/org.eclipse.jdt.text.tests.nl*,
                    eclipse/plugins/org.eclipse.jdt.nl*,
                    eclipse/plugins/org.eclipse.jdt.junit*,
                    eclipse/plugins/org.eclipse.jdt.doc.*,
                    eclipse/plugins/org.eclipse.jdt.debug.tests.nl*,
                    eclipse/plugins/org.eclipse.jdt.core.tests.*,
                    eclipse/plugins/org.eclipse.jdt.compiler.*,
                    eclipse/plugins/org.eclipse.jdt.apt.*,
                    eclipse/plugins/org.eclipse.equinox.preferences.jmx.nl*,
                    eclipse/plugins/org.eclipse.equinox.nl*,
                    eclipse/plugins/org.eclipse.equinox.metatype.nl*,
                    eclipse/plugins/org.eclipse.equinox.log.nl*,
                    eclipse/plugins/org.eclipse.equinox.jmx.*,
                    eclipse/plugins/org.eclipse.equinox.event.nl*,
                    eclipse/plugins/org.eclipse.equinox.device.nl*,
                    eclipse/plugins/org.eclipse.debug.examples.ui.nl*,
                    eclipse/plugins/org.eclipse.core.resources.jmx.nl*,
                    eclipse/plugins/org.eclipse.core.filebuffers.tests.nl*,
                    eclipse/plugins/org.eclipse.core.expressions.tests.nl*,
                    eclipse/plugins/org.eclipse.core.databinding.beans.nl*,
                    eclipse/plugins/org.eclipse.compare.tests.nl*,
                    eclipse/plugins/org.eclipse.compare.examples.*,
                    eclipse/plugins/org.eclipse.ant.*
                  </excludes>
                </artifactItem>
                <artifactItem>
                  <groupId>org.eclipse.languagepack</groupId>
                  <artifactId>BabelLanguagePack-eclipse-fr</artifactId>
                  <type>zip</type>
                  <outputDirectory>${project.build.directory}/eclipse-language-packs</outputDirectory>
                  <includes>eclipse/plugins/**</includes>
                  <excludes>
                    eclipse/plugins/org.junit4.nl*,
                    eclipse/plugins/org.eclipse.update.tests.core.nl*,
                    eclipse/plugins/org.eclipse.test.*,
                    eclipse/plugins/org.eclipse.ui.workbench.texteditor.tests.nl*,
                    eclipse/plugins/org.eclipse.ui.presentations.r21.nl*,
                    eclipse/plugins/org.eclipse.ui.intro.universal.nl*,
                    eclipse/plugins/org.eclipse.ui.externaltools.nl*,
                    eclipse/plugins/org.eclipse.ui.examples.*,
                    eclipse/plugins/org.eclipse.ui.editors.tests.nl*,
                    eclipse/plugins/org.eclipse.ui.cheatsheets.nl*,
                    eclipse/plugins/org.eclipse.ui.browser.nl*,
                    eclipse/plugins/org.eclipse.ui.tests*,
                    eclipse/plugins/org.eclipse.ua.tests.nl*,
                    eclipse/plugins/org.eclipse.text.tests.nl*,
                    eclipse/plugins/org.eclipse.team.tests.cvs.core.nl*,
                    eclipse/plugins/org.eclipse.team.examples.filesystem.nl*,
                    eclipse/plugins/org.eclipse.team.cvs.*,
                    eclipse/plugins/org.eclipse.swt.tools.nl*,
                    eclipse/plugins/org.eclipse.swt.tests.nl*,
                    eclipse/plugins/org.eclipse.swt.jmx.nl*,
                    eclipse/plugins/org.eclipse.swt.examples.*,
                    eclipse/plugins/org.eclipse.sdk.tests.nl*,
                    eclipse/plugins/org.eclipse.sdk.examples.nl*,
                    eclipse/plugins/org.eclipse.releng.tools.nl*,
                    eclipse/plugins/org.eclipse.platform.*,
                    eclipse/plugins/org.eclipse.pde.*,
                    eclipse/plugins/org.eclipse.osgi.jmx.nl*,
                    eclipse/plugins/org.eclipse.ltk.ui.refactoring.tests.nl*,
                    eclipse/plugins/org.eclipse.ltk.core.refactoring.tests.nl*,
                    eclipse/plugins/org.eclipse.jsch.*,
                    eclipse/plugins/org.eclipse.jface.text.tests.nl*,
                    eclipse/plugins/org.eclipse.jface.tests.*,
                    eclipse/plugins/org.eclipse.jface.examples.databinding.nl*,
                    eclipse/plugins/org.eclipse.jdt.ui.tests.*,
                    eclipse/plugins/org.eclipse.jdt.ui.examples.projects.nl*,
                    eclipse/plugins/org.eclipse.jdt.text.tests.nl*,
                    eclipse/plugins/org.eclipse.jdt.nl*,
                    eclipse/plugins/org.eclipse.jdt.junit*,
                    eclipse/plugins/org.eclipse.jdt.doc.*,
                    eclipse/plugins/org.eclipse.jdt.debug.tests.nl*,
                    eclipse/plugins/org.eclipse.jdt.core.tests.*,
                    eclipse/plugins/org.eclipse.jdt.compiler.*,
                    eclipse/plugins/org.eclipse.jdt.apt.*,
                    eclipse/plugins/org.eclipse.equinox.preferences.jmx.nl*,
                    eclipse/plugins/org.eclipse.equinox.nl*,
                    eclipse/plugins/org.eclipse.equinox.metatype.nl*,
                    eclipse/plugins/org.eclipse.equinox.log.nl*,
                    eclipse/plugins/org.eclipse.equinox.jmx.*,
                    eclipse/plugins/org.eclipse.equinox.event.nl*,
                    eclipse/plugins/org.eclipse.equinox.device.nl*,
                    eclipse/plugins/org.eclipse.debug.examples.ui.nl*,
                    eclipse/plugins/org.eclipse.core.resources.jmx.nl*,
                    eclipse/plugins/org.eclipse.core.filebuffers.tests.nl*,
                    eclipse/plugins/org.eclipse.core.expressions.tests.nl*,
                    eclipse/plugins/org.eclipse.core.databinding.beans.nl*,
                    eclipse/plugins/org.eclipse.compare.tests.nl*,
                    eclipse/plugins/org.eclipse.compare.examples.*,
                    eclipse/plugins/org.eclipse.ant.*
                  </excludes>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-language-packs</id>
            <phase>process-resources</phase>
            <configuration>
              <tasks>
                <copy todir="${studio-dir}">
                  <fileset dir="${project.build.directory}/eclipse-language-packs/eclipse" />
                </copy>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.directory.studio</groupId>
        <artifactId>studio-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-plugins</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-eclipse-artifact</goal>
            </goals>
            <configuration>
              <destinationDirectory>${studio-dir}/plugins</destinationDirectory>
              <artifactItems>
                <!-- The directory studio plugins -->
                <artifactItem>
                  <groupId>org.apache.directory.studio</groupId>
                  <artifactId>aciitemeditor</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.directory.studio</groupId>
                  <artifactId>apacheds</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.directory.studio</groupId>
                  <artifactId>apacheds.configuration</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.directory.studio</groupId>
                  <artifactId>apacheds.configuration.help</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.directory.studio</groupId>
                  <artifactId>apacheds.help</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.directory.studio</groupId>
                  <artifactId>connection.core</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.directory.studio</groupId>
                  <artifactId>connection.ui</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.directory.studio</groupId>
                  <artifactId>jars</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.directory.studio</groupId>
                  <artifactId>ldapbrowser.core</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.directory.studio</groupId>
                  <artifactId>ldapbrowser.common</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.directory.studio</groupId>
                  <artifactId>ldapbrowser.help</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.directory.studio</groupId>
                  <artifactId>ldapbrowser.ui</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.directory.studio</groupId>
                  <artifactId>ldifeditor</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.directory.studio</groupId>
                  <artifactId>ldifeditor.help</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.directory.studio</groupId>
                  <artifactId>ldifparser</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.directory.studio</groupId>
                  <artifactId>rcp</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.directory.studio</groupId>
                  <artifactId>rcp.help</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.directory.studio</groupId>
                  <artifactId>schemaeditor</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.directory.studio</groupId>
                  <artifactId>schemaeditor.help</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.directory.studio</groupId>
                  <artifactId>valueeditors</artifactId>
                </artifactItem>
                 
                <!-- Eclipse plugins -->
                <artifactItem>
			      <groupId>com.ibm</groupId>
			      <artifactId>icu</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>javax</groupId>
			      <artifactId>servlet</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>javax.servlet</groupId>
			      <artifactId>jsp</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.apache.commons</groupId>
			      <artifactId>el</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.apache.commons</groupId>
			      <artifactId>logging</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.apache</groupId>
			      <artifactId>jasper</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.apache</groupId>
			      <artifactId>lucene</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.apache.lucene</groupId>
			      <artifactId>analysis</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse</groupId>
			      <artifactId>compare</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.core</groupId>
			      <artifactId>boot</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.core</groupId>
			      <artifactId>commands</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.core</groupId>
			      <artifactId>contenttype</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.core</groupId>
			      <artifactId>databinding</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.core</groupId>
			      <artifactId>expressions</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.core</groupId>
			      <artifactId>filebuffers</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.core</groupId>
			      <artifactId>filesystem</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.core</groupId>
			      <artifactId>jobs</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.core</groupId>
			      <artifactId>net</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.core</groupId>
			      <artifactId>resources</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.core.resources</groupId>
			      <artifactId>compatibility</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.core</groupId>
			      <artifactId>runtime</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.core.runtime</groupId>
			      <artifactId>compatibility</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.core.runtime.compatibility</groupId>
			      <artifactId>auth</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.core</groupId>
			      <artifactId>variables</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.debug</groupId>
			      <artifactId>core</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.debug</groupId>
			      <artifactId>ui</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.equinox</groupId>
			      <artifactId>app</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.equinox</groupId>
			      <artifactId>common</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.equinox.http</groupId>
			      <artifactId>jetty</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.equinox.http</groupId>
			      <artifactId>registry</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.equinox.http</groupId>
			      <artifactId>servlet</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.equinox.jsp</groupId>
			      <artifactId>jasper</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.equinox.jsp.jasper</groupId>
			      <artifactId>registry</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.equinox</groupId>
			      <artifactId>launcher</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.equinox</groupId>
			      <artifactId>preferences</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.equinox</groupId>
			      <artifactId>registry</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.equinox</groupId>
			      <artifactId>security</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse</groupId>
			      <artifactId>help</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.help</groupId>
			      <artifactId>appserver</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.help</groupId>
			      <artifactId>base</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.help</groupId>
			      <artifactId>ui</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.help</groupId>
			      <artifactId>webapp</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.jdt</groupId>
			      <artifactId>core</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.jdt.core</groupId>
			      <artifactId>manipulation</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.jdt.debug</groupId>
			      <artifactId>ui</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.jdt</groupId>
			      <artifactId>launching</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.jdt</groupId>
			      <artifactId>ui</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse</groupId>
			      <artifactId>jface</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.jface</groupId>
			      <artifactId>databinding</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.jface</groupId>
			      <artifactId>text</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.ltk.core</groupId>
			      <artifactId>refactoring</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.ltk.ui</groupId>
			      <artifactId>refactoring</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse</groupId>
			      <artifactId>osgi</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.osgi</groupId>
			      <artifactId>services</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.osgi</groupId>
			      <artifactId>util</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse</groupId>
			      <artifactId>rcp</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse</groupId>
			      <artifactId>search</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse</groupId>
			      <artifactId>swt</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.team</groupId>
			      <artifactId>core</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.team</groupId>
			      <artifactId>ui</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse</groupId>
			      <artifactId>text</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse</groupId>
			      <artifactId>ui</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.ui</groupId>
			      <artifactId>console</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.ui</groupId>
			      <artifactId>editors</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.ui</groupId>
			      <artifactId>forms</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.ui</groupId>
			      <artifactId>ide</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.ui.ide</groupId>
			      <artifactId>application</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.ui</groupId>
			      <artifactId>intro</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.ui</groupId>
			      <artifactId>navigator</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.ui.navigator</groupId>
			      <artifactId>resources</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.ui</groupId>
			      <artifactId>net</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.ui</groupId>
			      <artifactId>views</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.ui.views.properties</groupId>
			      <artifactId>tabbed</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.ui</groupId>
			      <artifactId>workbench</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.ui.workbench</groupId>
			      <artifactId>texteditor</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.update</groupId>
			      <artifactId>configurator</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.update</groupId>
			      <artifactId>core</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.update</groupId>
			      <artifactId>scheduler</artifactId>
			    </artifactItem>
			    <artifactItem>
			      <groupId>org.eclipse.update</groupId>
			      <artifactId>ui</artifactId>
			    </artifactItem>
                <artifactItem>
                  <groupId>org.mortbay.jetty</groupId>
                  <artifactId>server</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.mortbay.jetty</groupId>
                  <artifactId>util</artifactId>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          
          <execution>
            <id>unpack-plugins</id>
            <phase>process-resources</phase>
            <goals>
              <goal>unpack-with-artifactid-prefix</goal>
            </goals>
            <configuration>
              <outputDirectory>${studio-dir}/plugins</outputDirectory>
              <artifactItems>
                <artifactItem>
                    <groupId>org.eclipse.ui.workbench</groupId>
                    <artifactId>compatibility</artifactId>
                    <type>zip</type>
                </artifactItem>
                <artifactItem>
                  <groupId>org.eclipse.jdt</groupId>
                  <artifactId>debug</artifactId>
                  <type>zip</type>
                </artifactItem>
                <artifactItem>
                  <groupId>org.eclipse</groupId>
                  <artifactId>sdk</artifactId>
                  <type>zip</type>
                </artifactItem>
                <artifactItem>
                  <groupId>org.eclipse.core.runtime.compatibility</groupId>
                  <artifactId>registry</artifactId>
                  <type>zip</type>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          
          <execution>
            <id>unpack-features-with-artifactid-prefix</id>
            <phase>process-resources</phase>
            <goals>
              <goal>unpack-with-artifactid-prefix</goal>
            </goals>
            <configuration>
              <outputDirectory>${studio-dir}/features</outputDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>org.apache.directory.studio</groupId>
                  <artifactId>rcp.feature</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.directory.studio</groupId>
                  <artifactId>schemaeditor.feature</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.directory.studio</groupId>
                  <artifactId>ldapbrowser.feature</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.directory.studio</groupId>
                  <artifactId>ldifeditor.feature</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.directory.studio</groupId>
                  <artifactId>apacheds.configuration.feature</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.directory.studio</groupId>
                  <artifactId>apacheds.feature</artifactId>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- No tests to run -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>

      <!-- FIXME enable check for legal file -->
      <plugin>
        <groupId>org.apache.geronimo.genesis.plugins</groupId>
        <artifactId>tools-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>verify-legal-files</id>
            <phase>verify</phase>
            <goals>
              <goal>verify-legal-files</goal>
            </goals>
            <configuration>
              <!-- Fail the build if no legal files were found -->
              <strict>false</strict>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
