/*
 *  Licensed to the Apache Software Foundation (ASF) under one
 *  or more contributor license agreements.  See the NOTICE file
 *  distributed with this work for additional information
 *  regarding copyright ownership.  The ASF licenses this file
 *  to you under the Apache License, Version 2.0 (the
 *  "License"); you may not use this file except in compliance
 *  with the License.  You may obtain a copy of the License at
 *  
 *    http://www.apache.org/licenses/LICENSE-2.0
 *  
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied.  See the License for the
 *  specific language governing permissions and limitations
 *  under the License. 
 *  
 */

package org.apache.directory.studio.schemas.io;


import java.io.BufferedWriter;
import java.io.FileWriter;
import java.text.DateFormat;
import java.util.Date;

import org.apache.directory.studio.schemas.model.AttributeType;
import org.apache.directory.studio.schemas.model.ObjectClass;
import org.apache.directory.studio.schemas.model.Schema;


/**
 * This class is a LDAP schema generator
 *
 */
public class SchemaWriter
{

    /**
     * Launch schema generation
     * @param schema the schema
     * @param src the file-path where it will be generated
     * @throws Exception if an exception during the generation of the schema
     */
    public void write( Schema schema, String src ) throws Exception
    {
        StringBuffer sb = new StringBuffer();
        sb.append( "# " + schema.getName() + "\n" );
        DateFormat format = DateFormat.getDateTimeInstance( DateFormat.LONG, DateFormat.MEDIUM );
        Date date = new Date();
        sb.append( "# Generated by Apache Directory Studio on " + format.format( date ) + "\n" );
        sb.append( "\n" );

        for ( AttributeType at : schema.getAttributeTypesAsArray() )
        {
            sb.append( at.write() );
            sb.append( "\n" );
        }

        for ( ObjectClass oc : schema.getObjectClassesAsArray() )
        {
            sb.append( oc.write() );
            sb.append( "\n" );
        }

        // Writing schema file to the specified location.
        BufferedWriter bufferedWriter;
        bufferedWriter = new BufferedWriter( new FileWriter( src ) );
        bufferedWriter.write( sb.toString() );
        bufferedWriter.close();
    }
}
